basePath: /api
definitions:
  requests.CreateUsersRequest:
    properties:
      location:
        type: string
      name:
        maxLength: 200
        minLength: 1
        type: string
      title:
        type: string
    required:
    - location
    - name
    - title
    type: object
  responses.Response:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Service API in Go using Gin framework
  title: Service API
  version: "1.0"
paths:
  /user:
    post:
      description: Save User data in Db.
      parameters:
      - description: user
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Create User
  /user/{userId}:
    delete:
      description: Delete User from Db.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Delete User
    get:
      description: get a user data from Db.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Get User
    put:
      description: Edit user's data in Db.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Edit User
  /users:
    get:
      description: Save tags data in Db.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Get all Users
swagger: "2.0"
